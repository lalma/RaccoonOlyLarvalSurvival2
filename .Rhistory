$brew install bfg
############################
#create an empty list to store all of the replicate cox outputs
cox <- vector(mode = "list", length = numreps)
coxcoef <- vector(mode = "list", length = numreps)
numreps <- 500
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(database, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment + site + treatment:site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
#combine all coefficients into a single dataframe
coefficients_ci20 <- bind_rows(coxcoef)
head(coefficients_ci20)
View(sf)
cox<-coxph(Surv(day[1],status[1])~site[k] +treatment[k], data=rep)
head(coefficients_ci20)
write.csv(coefficients_ci20, file = ".csv")
#set working directory
setwd("C:/Users/Lindsay/Dropbox/Raccoon/larvae/oyster/larvae survival stats/GitHub/RaccoonOlyLarvalSurvival2")
write.csv(coefficients_ci20, file = "coefficients_ci20.csv")
#run model with othe refs
CI5ref<-subset(database, Location==c("CI5", "PW", "DB"))
#run model with othe refs
CI5ref<-subset(database, site==c("CI5", "PW", "DB"))
#run model with othe refs
CI5ref<-subset(database, site==c("CI5", "PW", "DB"))
database
unique(site$dataframe)
unique(site$database)
unique(site$database)
databse
database
unique(day$database)
unique(database$site)
#run model with othe refs
CI5ref<-subset(database, site==c("CI5", "PW", "DB"))
DB5ref<-subset(database, site==c("CI20", "CI5"))
#run model with othe refs
CI20<-subset(database, Location=="CI20")
#run model with othe refs
CI20<-subset(database, site=="CI20")
#run model with othe refs
CI5<-subset(database, site==c("CI5","Pw"))
#run model with othe refs
site1<-c("CI5","Pw")
CI5<-subset(database, site==site1)
CI5<-subset(database, site=/="CI20")
CI5<-subset(database, site!="CI20")
CI5
#run model with othe refs
CI5ref<-subset(database, site!="CI20")
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(CI5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment + site + treatment:site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
#combine all coefficients and p-value into a single dataframe
coefficients_ci5 <- bind_rows(coxcoef)#CI5 as the control
head(coefficients_ci5)
write.csv(coefficients_ci5, file = "coefficients_ci5.csv")
CI5ref
CI5ref
View(CI5ref)
CI5<-subset(OlyLarvaeKMforR, Location=="CI5")
#make surv object
survCI5 <-Surv(time = CI5$day, CI5$dead, type = "right")
# fit model and plot without random effect
sfCI5 <- survfit(survCI5 ~ Treatment, data = CI5)
summary(coxph(survCI5 ~ Treatment, data = CI5))
CI5ref<-subset(OlyLarvaeKMforR, Location==c("CI5", "PW", "DB"))
View(CI5ref)
survCI5ref <-Surv(time = CI5ref$day, CI5ref$dead, type = "right")
sfCI5ref <- survfit(survCI5ref ~ Treatment +Location, data = CI5ref)
coxCI5ref<-coxph(survCI5ref ~ Treatment * Location, data = CI5ref)
coxCI5ref
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(CI5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment * site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
numreps <- 500
k <- filter(database, database$rep_id == 1)#only 1 out of 500 reps
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(CI5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment * site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
View(CI5ref)
#####CI5 as ref, CI20 deleted
CI5ref<-subset(database, site!="CI20")
View(CI5ref)
View(CI5ref)
CI5ref
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(CI5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment * site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
#combine all coefficients and p-value into a single dataframe
coefficients_ci5 <- bind_rows(coxcoef)#CI5 as the control
head(coefficients_ci5)
write.csv(coefficients_ci5, file = "coefficients_ci5.csv")
write.csv(CI5ref, file = "CI5ref.csv")
View(CI5ref)
customers = filter(database, !(site %in% c("CI20", "CI5")))
CI5ref = filter(database, !(site %in% c("CI20", "CI5")))
View(CI5ref)
#####CI5 as ref, CI20 deleted
CI5ref = filter(database, !(site %in% c("CI20", "")))
View(CI5ref)
#####CI5 as ref, CI20 deleted
CI5ref = filter(database, !(site %in% c("CI20")))
View(CI5ref)
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(CI5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment * site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
#combine all coefficients and p-value into a single dataframe
coefficients_ci5 <- bind_rows(coxcoef)#CI5 as the control
head(coefficients_ci5)
View(CI5ref)
ggforest(coxTemp, data=OlyLarvaeKMforR)
#model with temp only
coxTemp<-coxph(KMsurv~Treatment, data=OlyLarvaeKMforR)
#model with locaiton only
coxLocation<-coxph(KMsurv~Location, data=OlyLarvaeKMforR)
#model with non categorial veraibles
cox.number<-coxph(KMsurv~Temp+LocationNumber+Temp*LocationNumber, data=OlyLarvaeKMforR)
ggforest(cox.number)
head(coefficients_ci5)
#combine all coefficients and p-value into a single dataframe
coefficients_ci5 <- bind_rows(coxcoef)#CI5 as the control
head(coefficients_ci5)
write.csv(coefficients_ci5, file = "coefficients_ci5.csv")
OlyLarvaeKMforR <- read_excel("C:/Users/Lindsay/Dropbox/Raccoon/larvae/oyster/larvae survival stats/GitHub/RacoonOlyLarvalSurvival/data/fraility_RacoonOlyLarvaeSurvival/OlyLarvaeKMforR.xlsx")
#make surv object
KMsurv = Surv(time = OlyLarvaeKMforR$day, OlyLarvaeKMforR$dead, type = "right")
# fit KM model and plot without random effect of tank
sf <- survfit(KMsurv ~ Treatment+Location, data = OlyLarvaeKMforR)
summary(coxph(KMsurv ~ Treatment*Location, data = OlyLarvaeKMforR))
#cox model sample code without interaction
cox1<-coxph(KMsurv~Treatment+Location, data=OlyLarvaeKMforR)
summary(cox1)
#cox model sample code with interaction, this is the model for the main analysis
cox<-coxph(KMsurv~Treatment*Location, data=OlyLarvaeKMforR)
cox##<here results!!!
summary(cox)
#A hazard ratio of 1 indicates no effect
#A hazard ratio > 1 indicates an increase in the hazard as the covariate rises- It gets to death faster than the control
#A hazard ratio < 1 indicates a decrease in the hazard as the covariate rises- it is slower go get to the event (death) than the cotnrol
ggforest(cox, data=OlyLarvaeKMforR)
cox.zph(cox)
cox##<here results!!!
#model with temp only
coxTemp<-coxph(KMsurv~Treatment, data=OlyLarvaeKMforR)
ggforest(coxTemp, data=OlyLarvaeKMforR)
#model with locaiton only
coxLocation<-coxph(KMsurv~Location, data=OlyLarvaeKMforR)
ggforest(coxLocation, data=OlyLarvaeKMforR)
DB520ref<-subset(OlyLarvaeKMforR, Location==c("DB","CI5","PW"))
survDB520ref <-Surv(time = DB520ref$day, DB520ref$dead, type = "right")
sfDB520ref <- survfit(survDB520ref ~ Location, data = DB520ref)
ggsurvplot(sfDB520ref, conf.int = TRUE)
coxDB520ref<-coxph(survDB520ref ~ Location, data = DB520ref)
coxDB520ref
summary(coxDB520ref)
ggforest(coxDB520ref, data=DB520ref)
#####CI5 as ref, CI20 deleted
CI5ref = filter(bogcox, !(site %in% c("CI20")))
#####CI5 as ref, CI20 deleted
CI5ref = filter(bigcox, !(site %in% c("CI20")))
View(CI5ref)
#Just 1 rep cox output
R1<-subset(CI5ref, rep_id=="1")
KMsurv = Surv(time = R1$day, R1$status, type = "right")
sf <- survfit(KMsurv ~ site + treatment, data = R1)
coxR1<-coxph(KMsurv~treatment*site, data=R1)
S1<-summary(coxR1)
S1
ggforest(S1)
ggforest(coxR1)
R1
R1
View(R1)
CI5ref<-subset(OlyLarvaeKMforR, Location==c("CI5", "PW", "DB"))
View(CI5ref)
survCI5ref <-Surv(time = CI5ref$day, CI5ref$dead, type = "right")
sfCI5ref <- survfit(survCI5ref ~ Treatment +Location, data = CI5ref)
coxCI5ref<-coxph(survCI5ref ~ Treatment * Location, data = CI5ref)
coxCI5ref
#####CI5 as ref, CI20 deleted
CI5ref = filter(bigcox, !(site %in% c("CI20")))
View(CI5ref)
#####CI5 as ref, CI20 deleted
R1 = filter(bigcox, !(site %in% c("CI20")))
KMsurv = Surv(time = R1$day, R1$status, type = "right")
sf <- survfit(KMsurv ~ site + treatment, data = R1)
coxR1<-coxph(KMsurv~treatment*site, data=R1)
S1<-summary(coxR1)
ggforest(coxR1)
s1
S1
#####CI5 as ref, CI20 deleted
R1 = filter(OlyLarvaeKMforR, !(site %in% c("CI20")))
#####CI5 as ref, CI20 deleted
R1 = filter(OlyLarvaeKMforR, !(Location %in% c("CI20")))
KMsurv = Surv(time = R1$day, R1$status, type = "right")
sf <- survfit(KMsurv ~ site + treatment, data = R1)
KMsurv = Surv(time = R1$day, R1$status, type = "right")
#####CI5 as ref, CI20 deleted
CI5ref = filter(bigcox, !(site %in% c("CI20")))
write.csv(CI5ref, file = "CI5ref.csv")
View(CI5ref)
write.csv(CI5ref, file = "CI5ref.csv")
#####CI5 as ref, CI20 deleted
CI5ref = filter(bigcox, !(site %in% c("CI20")))
write.csv(CI5ref, file = "CI5ref.csv")
#####CI5 as ref, CI20 deleted
CI5ref = filter(bigcox, !(site %in% "CI20"))
write.csv(CI5ref, file = "CI5ref.csv")
nrow(df)
nrow(CI5ref)
nrow(bigcox)
#Just 1 rep cox output
R1<-subset(CI5ref, rep_id=="1")
View(R1)
KMsurv = Surv(time = R1$day, R1$status, type = "right")
sf <- survfit(KMsurv ~ site + treatment, data = R1)
coxR1<-coxph(KMsurv~treatment*site, data=R1)
coxR1
CI5ref = filter(bigcox, !(site %in% c("CI5","CI20"))
CI5ref = filter(bigcox, !(site %in% c("CI5","CI20")))
DB5ref = filter(bigcox, !(site %in% c("CI5","CI20")))
nrow(DB5ref)
#Just 1 rep cox output
R1<-subset(DB5ref, rep_id=="1")
View(R1)
KMsurv = Surv(time = R1$day, R1$status, type = "right")
sf <- survfit(KMsurv ~ site + treatment, data = R1)
coxR1<-coxph(KMsurv~treatment*site, data=R1)
coxR1
PW5ref = filter(bigcox, !(site %in% c("CI5","DB","CI20")))
nrow(PW5ref)
#Just 1 rep cox output
R1<-subset(PW5ref, rep_id=="1")
View(R1)
#Just 1 rep cox output
R1<-subset(PW5ref, rep_id=="1")
#Just 1 rep cox output
PW5ref<-subset(PW5ref, rep_id=="1")
Pw5ref <-Surv(time = PW5ref$day, PW5ref$status, type = "right")
sfPW5ref <- survfit(survPW5ref ~ treatment +site, data = PW5ref)
sfPW5ref <- survfit(PW5ref ~ treatment +site, data = PW5ref)
Pw5ref <-Surv(time = PW5ref$day, PW5ref$status, type = "right")
sfPW5ref <- survfit(PW5ref ~ treatment +site, data = PW5ref)
survPw5ref <-Surv(time = PW5ref$day, PW5ref$status, type = "right")
sfPW5ref <- survfit(survPW5ref ~ treatment +site, data = PW5ref)
survPW5ref <-Surv(time = PW5ref$day, PW5ref$status, type = "right")
sfPW5ref <- survfit(survPW5ref ~ treatment +site, data = PW5ref)
ggsurvplot(sfPW5ref, conf.int = TRUE)
coxPW5ref<-coxph(survPW5ref ~ treatment * site, data = PW5ref)
coxPW5ref
#PW ref, all other delted
PW5ref = filter(bigcox, !(site %in% c("CI5","DB","CI20")))
#PW only
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(PW5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment * site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
#combine all coefficients and p-value into a single dataframe
coefficients_pw5 <- bind_rows(coxcoef)#pw as the control
head(coefficients_pw5)
write.csv(coefficients_pw5, file = "coefficients_pw5.csv")
#################DB only
#DB ref, CI 20 and 5 deleted
DB5ref = filter(bigcox, !(site %in% c("CI5","CI20")))
nrow(DB5ref)
#DB only
#run the cox model in a for loop
for(i in 1:numreps) { #for each of the 500 reps in each jar-- i is the replicate it's on
rep <- subset(DB5ref, rep_id == i)#filter 1 rep at a time
coxoutput <- coxph(Surv(day, status) ~ treatment * site, data = rep)
cox[[i]] <- coxoutput #store the whole output of the model in a list
blah <- data.frame( #create a data frame with the coefficients and the replicate
coefficients = coxoutput$coefficients,
replicate = i,
pval = summary(coxoutput)$coefficients[,5])
blah$treatment_site <- rownames(blah) #in that dataframe, create a new column that has the treatment and site
#info in it
coxcoef[[i]] <- blah #assign the dataframe to the correct spot in the list
}
library(tidyverse)
library(here)
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv"))
View(d)
library(janitor)
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names()
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5))
View(d)
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_"))
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_vline(yintercept = 1)
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_vline(yintercept = 1)
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
#    geom_vline(yintercept = 1) +
geom_blank()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_vline(yintercept = 1) +
geom_blank()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_hline(yintercept = 1) +
geom_blank()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1) +
geom_blank()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_blank()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_blank() +
theme_bw()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme_bw()
d %>%
ggplot(aes(comparison, mean_expected_hr)) +
geom_point() +
geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
d_coef <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar","coefficients_CI5ref.csv"))
d_coef <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar","coefficients_ci 5ref.csv"))
d_coef <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar","coefficients_ci5ref.csv"))
d_coef <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar","coefficients_ci5.csv"))
View(d_coef)
d_coef <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar","coefficients_ci5.csv"))%>%
clean_names()
View(d_coef)
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = mean_expected_hr) %>%
{.}
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = mean_expected_hr) %>%
{.}
d %>%
ggplot(aes(comparison, exp_mean)) +
geom_point() +
#  geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = exp(mean_expected_hr)) %>%
{.}
d %>%
ggplot(aes(comparison, exp_mean)) +
geom_point() +
#  geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = log(mean_expected_hr)) %>%
{.}
d %>%
ggplot(aes(comparison, exp_mean)) +
geom_point() +
#  geom_errorbar(aes(ymin = x0_025quantile, ymax = x0_975quantile)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = exp(mean_expected_hr)) %>%
{.}
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = exp(mean_expected_hr),
exp_lower = exp(x0_025quantile),
exp_upper = exp(x0_975quantile)) %>%
{.}
d <- read_csv(here("data", "RaccoonLikelyhoodLarvaeInJar", "all500cox_coeff_HR_CI_122721.csv")) %>%
clean_names() %>%
mutate(comparison = paste(site_1, treatment_2, "x", site_4, treatment_5, sep = "_")) %>%
mutate(exp_mean = exp(mean_expected_hr),
exp_lower = exp(x0_025quantile),
exp_upper = exp(x0_975quantile)) %>%
{.}
d %>%
ggplot(aes(comparison, exp_mean)) +
geom_point() +
geom_errorbar(aes(ymin = exp_lower, ymax = exp_upper)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
d %>%
ggplot(aes(comparison, exp_mean)) +
geom_point(aes(colour = site_1)) +
geom_errorbar(aes(ymin = exp_lower, ymax = exp_upper)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p <- d %>%
ggplot(aes(comparison, exp_mean)) +
geom_point(aes(colour = site_1)) +
geom_errorbar(aes(ymin = exp_lower, ymax = exp_upper)) +
geom_hline(yintercept = 1, linetype = "dashed") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggsave(filename = here("figs", "hr_interactions.png"), plot = p)
